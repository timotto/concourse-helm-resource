#!/bin/bash

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source /opt/resource/common.sh

# Read inputs
target=$1
payload=$(mktemp helm-resource-request.XXXXXX)
cat > $payload <&0

# Prepare
setup_resource $payload $source
echo "Resource setup successful."

# Parse parameters
namespace=$(jq -r '.source.namespace // "default"' < $payload)
tiller_namespace=$(jq -r '.source.tiller_namespace // "kube-system"' < $payload)
release_file=$(jq -r '.params.release // ""' < $payload)
if [ -n "$release_file" ]; then
  release=`cat $source/$release_file`
else
  release=$(jq -r '.source.release // ""' < $payload)
fi

# Find the current revision of a helm release
current_revision() {
  revision=`helm history --tiller-namespace $tiller_namespace $release | grep "DEPLOYED" | awk '{print $1}'`
  echo $revision
}

helm status $release | tee $target/status
echo '{"version":{"ref":"none"}}' >&3
